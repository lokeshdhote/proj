// // Frontend: Chat.js
// import React, { useState, useEffect } from 'react';
// import io from 'socket.io-client';

// const socket = io.connect("http://localhost:4000");

// const Chat = () => {
//     const [username, setUsername] = useState("");
//     const [loggedIn, setLoggedIn] = useState(false);
//     const [recipient, setRecipient] = useState("");
//     const [chatRequested, setChatRequested] = useState(false);
//     const [chatAccepted, setChatAccepted] = useState(false);
//     const [message, setMessage] = useState("");
//     const [messages, setMessages] = useState([]);

//     useEffect(() => {
//         socket.on('chatRequest', ({ from }) => {
//             const accept = window.confirm(`${from} wants to chat with you. Accept?`);
//             if (accept) {
//                 socket.emit('acceptChat', { from, to: username });
//                 setChatAccepted(true);
//                 setRecipient(from);
//             } else {
//                 socket.emit('declineChat', { from, to: username });
//             }
//         });

//         socket.on('chatAccepted', ({ to }) => {
//             alert(`${to} accepted your chat request`);
//             setChatAccepted(true);
//         });

//         socket.on('chatDeclined', ({ to }) => {
//             alert(`${to} declined your chat request`);
//             setChatRequested(false);
//         });

//         socket.on('privateMessage', ({ from, message }) => {
//             setMessages((prevMessages) => [...prevMessages, { sender: from, text: message }]);
//         });

//         return () => {
//             socket.off('chatRequest');
//             socket.off('chatAccepted');
//             socket.off('chatDeclined');
//             socket.off('privateMessage');
//         };
//     }, [username]);

//     const handleLogin = () => {
//         socket.emit('register', username);
//         setLoggedIn(true);
//     };

//     const handleChatRequest = () => {
//         socket.emit('chatRequest', { from: username, to: recipient });
//         setChatRequested(true);
//     };

//     const handleSendMessage = (e) => {
//         e.preventDefault();
//         if (message && chatAccepted) {
//             socket.emit('privateMessage', { from: username, to: recipient, message });
//             setMessages((prevMessages) => [...prevMessages, { sender: 'Me', text: message }]);
//             setMessage('');
//         }
//     };

//     return (
//         <div>
//             {!loggedIn ? (
//                 <div>
//                     <h2>Login</h2>
//                     <input
//                         type="text"
//                         placeholder="Enter your username"
//                         value={username}
//                         onChange={(e) => setUsername(e.target.value)}
//                     />
//                     <button onClick={handleLogin}>Login</button>
//                 </div>
//             ) : (
//                 <div>
//                     <h2>Welcome, {username}</h2>
//                     <input
//                         type="text"
//                         placeholder="Enter recipient's username"
//                         value={recipient}
//                         onChange={(e) => setRecipient(e.target.value)}
//                     />
//                     <button onClick={handleChatRequest} disabled={chatRequested}>
//                         Request Chat
//                     </button>

//                     {chatAccepted ? (
//                         <div>
//                             <h3>Chat with {recipient}</h3>
//                             <div>
//                                 {messages.map((msg, index) => (
//                                     <div key={index}>
//                                         <strong>{msg.sender}:</strong> {msg.text}
//                                     </div>
//                                 ))}
//                             </div>
//                             <form onSubmit={handleSendMessage}>
//                                 <input
//                                     type="text"
//                                     placeholder="Type your message"
//                                     value={message}
//                                     onChange={(e) => setMessage(e.target.value)}
//                                 />
//                                 <button type="submit">Send</button>
//                             </form>
//                         </div>
//                     ) : chatRequested ? (
//                         <p>Waiting for {recipient} to accept the chat...</p>
//                     ) : null}
//                 </div>
//             )}
//         </div>
//     );
// };

// export default Chat;

// // src/components/ProjectCard.js
// import React, { useEffect } from 'react';
// import { useDispatch, useSelector } from 'react-redux';
// import { NavLink } from 'react-router-dom';
// import { AyscnClientProject } from '../src/Store/Actions/ClientAction';

// const ProjectCard = () => {
//   const dispatch = useDispatch();

//   // Fetching projects from Redux state
//   const { project } = useSelector((state) => state.Client?.project); // Assuming state.Client directly contains `project`
//   console.log(project);

//   useEffect(() => {
//     dispatch(AyscnClientProject()); // Fetch projects when the component mounts
//   }, [dispatch]);

//   return (
//     <div className="container mx-auto p-6 space-y-6">
//       {project?.length > 0 ? (
//         project.map((proj, index) => (
//           <div
//             key={index}
//             className="bg-white p-6 rounded-lg shadow-md flex justify-between items-start"
//           >
//             {/* Left Section */}
//             <div>
//               <h3 className="text-xl font-semibold mb-2">{proj?.title}</h3>
//               <div className="flex items-center text-sm text-gray-500 mb-4">
//                 <span>{proj?.location}</span>
//                 <span className="mx-2">|</span>
//                 <span>Posted {proj?.posted}</span>
//                 <span className="mx-2">|</span>
//                 <span>{proj?.proposals} Proposals</span>
//               </div>
//               <p className="text-gray-700 mb-4">{proj?.description || 'No description provided.'}</p>
//               <div className="flex flex-wrap gap-2">
//                 {proj?.skills?.map((skill, index) => (
//                   <span
//                     key={index}
//                     className="bg-gray-200 text-gray-700 px-2 py-1 rounded-full text-xs"
//                   >
//                     {skill}
//                   </span>
//                 ))}
//               </div>
//             </div>

//             {/* Right Section */}
//             <div className="text-right">
//               <p className="text-lg font-semibold mb-2">{proj?.rate || 'N/A'}</p>
//               <p className="text-sm text-gray-500 mb-4">{proj?.rateType || 'Not specified'}</p>
//               <NavLink to="/SendProposal">
//                 <button className="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600">
//                   Send Proposal
//                 </button>
//               </NavLink>
//             </div>
//           </div>
//         ))
//       ) : (
//         <p className="text-gray-500 text-center">No projects found.</p>
//       )}
//     </div>
//   );
// };

// export default ProjectCard;

// {
//     import React, { useEffect, useState } from "react";
// import { useDispatch, useSelector } from "react-redux";
// import { NavLink, useNavigate } from "react-router-dom";
// import {
//   AyscnClientLoggedIn,
//   AysncClientSignout,
// } from "../../src/Store/Actions/ClientAction";
// import {
//   AyscnuserLoggedIn,
//   AysncuserSignout,
// } from "../../src/Store/Actions/userAction";

// const Nav = () => {
//   const dispatch = useDispatch();
//   const navigate = useNavigate();

//   const { user, loadings } = useSelector((state) => state?.user);
//   const { Client, loading } = useSelector((state) => state?.Client);

//   const [dropdownOpen, setDropdownOpen] = useState(false);

//   const toggleDropdown = () => setDropdownOpen((prev) => !prev);

//   const signout = () => {
//     setDropdownOpen(false);
//     dispatch(AysncClientSignout());
//    dispatch(AysncuserSignout())
//     // if (user?.token) {
//     //   dispatch();
//     // } else if (Client?.token) {
     
//     // }
//     navigate("/");
//   };

//   useEffect(() => {
//     dispatch(AyscnuserLoggedIn());
//     dispatch(AyscnClientLoggedIn());
//     // if (user?.token) {
//     //   dispatch(AyscnuserLoggedIn());
//     // }
//     // if (Client?.token) {
//     //   dispatch(AyscnClientLoggedIn());
//     // }
//   }, [dispatch, user?.token, Client?.token]);

//   return (
//     <>
//       {loading || loadings ? ('') : (
//         <div className="h-fit fixed w-full top-0 bg-white flex items-center justify-between gap-[5vw] max-md:gap-[2vw] px-[2vw] py-2 max-md:px-2 z-40">
//           {/* Logo */}
//           <NavLink to={"/"}>
//             <img
//               className="object-contain h-fit w-[5vw] max-md:w-[8vw]"
//               src="/logo--1-removebg-preview.png"
//               alt="Logo"
//             />
//           </NavLink>

//           {/* Navigation Links */}
//           <div className="flex gap-11 max-md:gap-7 w-fit items-center justify-center">
//             <NavLink to={"/"} className="font-semibold text-[15px] max-md:text-[6px]">
//               Home
//             </NavLink>
//             {Client?.token ? (
//               <NavLink
//                 to={"/find-freelancers"}
//                 className="font-semibold text-[15px] max-md:text-[6px]"
//               >
//                 FIND FREELANCERS
//               </NavLink>
//             ) : user?.token ? (
//               <NavLink
//                 to={"/FindProject"}
//                 className="font-semibold text-[15px] max-md:text-[6px]"
//               >
//                 FIND PROJECTS
//               </NavLink>
//             ) : (
//               <>
//                 <NavLink
//                   to={"/FindProject"}
//                   className="font-semibold text-[15px] max-md:text-[6px]"
//                 >
//                   FIND PROJECTS
//                 </NavLink>
//                 <NavLink
//                   to={"/find-freelancers"}
//                   className="font-semibold text-[15px] max-md:text-[6px]"
//                 >
//                   FIND FREELANCERS
//                 </NavLink>
//               </>
//             )}
//             <NavLink to={"/about"} className="font-semibold text-[15px] max-md:text-[6px]">
//               ABOUT US
//             </NavLink>
//             <NavLink to={"/contact"} className="font-semibold text-[15px] max-md:text-[6px]">
//               CONTACT
//             </NavLink>
//           </div>

//           {/* Actions Section */}
//           <div className="flex gap-8 items-center">
//             {/* Sign-Up/Log-In */}
//             {!user?.token && !Client?.token && (
//               <NavLink
//                 to={"/login"}
//                 className="bg-blue-500 justify-center items-center max-md:text-[4px] text-sm hover:bg-[#44a4ed] text-white font-semibold py-3 px-11 max-md:py-1 max-md:px-2 border-blue-600 rounded-xl shadow ease-in duration-150"
//               >
//                 SIGN UP / LOG IN
//               </NavLink>
//             )}

//             {/* Post a Project */}
//             {Client?.token && (
//               <NavLink
//                 to={"/Post"}
//                 className="bg-blue-500 max-md:text-[4px] flex gap-4 items-center justify-center hover:bg-[#44a4ed] text-sm text-white font-bold py-3 max-md:py-1 px-8 border border-blue-600 max-md:px-2 rounded-xl ease-in duration-150"
//               >
//                 Post a Project
//                 <img className="h-5 max-md:h-3" src="job.png" alt="Job Icon" />
//               </NavLink>
//             )}

//             {/* Notifications and Messages */}
//             <div className="flex gap-5 items-center">
//               <NavLink to={"/notification"}>
//                 <i className="ri-notification-line text-2xl"></i>
//               </NavLink>
//               <NavLink to={"/message"}>
//                 <i className="ri-message-2-line text-2xl"></i>
//               </NavLink>
//             </div>
 

//             {/* Profile Dropdown */}
//             <div className="relative">
//               <div
//                 className="w-[2.5vw] h-[2.5vw] border border-gray-300 rounded-full flex items-center justify-center cursor-pointer hover:shadow-lg"
//                 onClick={toggleDropdown}
//               >
//                 <i className="ri-user-line"></i>
//               </div>
//               {dropdownOpen && (
//                 <div className="absolute right-0 mt-2 bg-white border border-gray-300 shadow-lg rounded-md w-44">
//                   <NavLink
//                     to={"/profile"}
//                     className="flex items-center gap-3 px-4 py-2 text-gray-700 hover:bg-gray-100 hover:text-blue-700 rounded-md transition-all"
//                   >
//                     <i className="ri-user-line"></i> Profile
//                   </NavLink>
//                   <NavLink
//                     to={"/wallet"}
//                     className="flex items-center gap-3 px-4 py-2 text-gray-700 hover:bg-gray-100 hover:text-blue-700 rounded-md transition-all"
//                   >
//                     <i className="ri-wallet-line"></i> Wallet
//                   </NavLink>
//                   <NavLink
//                     to={"/settings"}
//                     className="flex items-center gap-3 px-4 py-2 text-gray-700 hover:bg-gray-100 hover:text-blue-700 rounded-md transition-all"
//                   >
//                     <i className="ri-settings-3-line"></i> Settings
//                   </NavLink>
//                   <NavLink
//                     to={"/resume"}
//                     className="flex items-center gap-3 px-4 py-2 text-gray-700 hover:bg-gray-100 hover:text-blue-700 rounded-md transition-all"
//                   >
//                     <i className="ri-file-text-line"></i> Resume
//                   </NavLink>
//                   <button
//                     onClick={signout}
//                     className="flex items-center gap-3 w-full text-left px-4 py-2 text-red-600 hover:bg-red-100 hover:text-red-700 rounded-md transition-all"
//                   >
//                     <i className="ri-logout-box-line"></i> Logout
//                   </button>
//                 </div>
//               )}
//             </div>
//           </div>
//         </div>
//       )}
//     </>
//   );
// };

// export default Nav;


// }






const [showEditResume, setShowEditResume] = useState(false);
const [ShowAvatar, setShowAvatar] = useState(false);
const [editingIndex, setEditingIndex] = useState(null);
const [ShowDropdown, setShowDropdown] = useState(false);

const [ShowEducation, setShowEducation] = useState(false);
const [ShowAddJobs, setShowAddJobs] = useState(false);
const [ShowAddResp, setShowAddResp] = useState(false);
const [ShowAddCourses, setShowAddCourses] = useState(false);
const [ShowAddProjects, setShowAddProjects] = useState(false);
const [ShowAddSkills, setShowAddSkills] = useState(false);
const [ShowAddLink, setShowAddLink] = useState(false);
const [ShowAddAccomp, setShowAddAccomp] = useState(false);

const [ShowEditEducation, setShowEditEducation] = useState(false);
const [ShowEditJobs, setShowEditJobs] = useState(false);
const [ShowEditResp, setShowEditResp] = useState(false);
const [ShowEditCourse, setShowEditCourse] = useState(false);
const [ShowEditProjects, setShowEditProjects] = useState(false);
const [ShowEditLink, setShowEditLink] = useState(false);
const [ShowEditSkills, setShowEditSkills] = useState(false);
const [ShowEditAccomp, setShowEditAccomp] = useState(false);

const [ShowDelEducation, setShowDelEducation] = useState(false);
